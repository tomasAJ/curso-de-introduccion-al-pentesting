Sistema de puntuación de vulnerabilidades comunes
CVSS - Common Vulnerability Scoring System

Este registro permite definir que tan critica es con un algoritmo matemático.
• https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator

Base Score Metrics para calcular un score base y clasificación.
El saber que score tiene una vulnerabilidad permite saber que tan critica es, que tan rapido debemos parchear la vulnerabilidad.

Resumen: Sistema de puntuación de vulnerabilidades comunes, herramienta CVSS para calcular score.

El CVSS (Common Vulnerability Scoring System) define qué tan crítica es una vulnerabilidad.

Métricas de puntuación de vulnerabilidades

El siguiente cuadro muestra las métricas básicas y de impacto de una vulnerabilidad.

Métrica de puntuación básica
• Vector de ataque (Attack Vector - AV)
• Complejidad del ataque (Attack Complexity - AC)
• Privilegios requeridos (Privileges Required - PR)

Métricas de impacto - Tríada CIA
• Impacto en la confidencialidad (Confidentiality Impact - C)
• Impacto en la integridad (Integrity Impact - I)
• Impacto en la disponibilidad (Availability Impact - A)

Interacción con el usuario (User Interaction - UI)

Si la vulnerabilidad afecta una aplicación web es un ataque remoto.
Si requiere dentro de un ataque de un equipo de la red utilizando protocolo SMB, es un ataque de red.

Qué significa la puntuación de vulnerabilidad
Como el CVSS en realidad es una fórmula. Es un sistema que tiene en cuenta diferentes aspectos para dar una valoración de 0 a 10 a esa vulnerabilidad.
• Mientras más cerca se encuentre del 10, más peligro representa para los usuarios.
• Cuando la puntuación es entre 0 y 3,9 se considera una vulnerabilidad de severidad baja.
• Cuando la cifra resultante se encuentra entre 4 y 6,9 estaríamos ante una vulnerabilidad de peligrosidad media.
• Mientras que una puntuación de 7 a 10 son las más peligrosas.

https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator

Scope - Base Score Metrics
El Scope es el alcance que se tiene, es decir, si un asset tiene una vulnerabilidad y esa vulnerabilidad permite afectar los recursos de otro asset, podemos decir que el scope a cambiado es decir se establece el valor como (Changed). Cabe mencionar que si la vulnerabilidad afecta a un componente y puedes afectar otros componentes, esto no es cambio de scope a menos que el otro componente afectado pertenezca a un asset o activo distintos.

Ejemplo: Descubres una vulnerabilidad que te permite consumir una API o un Endpoint sin restricciones. Y ese endpoint a su vez consume un recurso interno de la organización que no está expuesto a internet, podemos decir que el scope a cambiado. O si por ejemplo existe un Endpoint que solo puede ser consumido desde el servidor de una aplicación web y ese endpoint no puede ser accedido externamente por ningun atacante, pero resulta que encuentras una vulnerabilidad de SSRF que te permita consumir ese enpoint a traves del servidor de la aplicacion web y como ese si tiene permiso, puedes consumirlo sin problema y ahí el scope a cambiados.

El explotar una vulnerabilidad se refiere a aprovecharse de dicha vulnerabilidad para obtener algo a cambio.

Por ejemplo, una vulnerabilidad de tipo SQL Injection permite inyectar querys SQL hacia el gestor de base de datos a través de la aplicación vulnerable. Entonces, si yo identifico una vulnerabilidad de SQL Injection, necesito "explotar" la vulnerabilidad para lograr aprovecharme de esta vulnerabilidad, que en ese caso, sería extraer las bases de datos de la aplicación.

De ahí deriva el termino exploit, el cual se refiere al método o al software que explota una vulnerabilidad.
